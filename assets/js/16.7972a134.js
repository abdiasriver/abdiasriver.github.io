(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{201:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("In this three-part series, I will show you one way to simplify and manage\nmultiple Arch Linux systems using a custom repo, a set of meta-packages and a\nscripted installer. Each part is standalone and can be used by its self, but\nthey are designed to build upon and complement each other each focusing on a\ndifferent part of the problem.")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Part 1:")]),t._v(" "),a("router-link",{attrs:{to:"/linux/archlinux-repo-in-aws-bucket/"}},[t._v("Hosting an Arch Linux Repo in an Amazon S3 Bucket")])],1),t._v(" "),a("li",[a("strong",[t._v("Part 2:")]),t._v(" "),a("router-link",{attrs:{to:"/linux/archlinux-meta-packages/"}},[t._v("Managing Arch Linux with Meta Packages")])],1),t._v(" "),t._m(1)]),t._v(" "),a("p",[t._v("The Arch Linux install process can be quite daunting to new users, but once you\nunderstand it, it becomes quite elegant in its simplicity. The best part is\nthat it's command line based with very little abstraction built on top of it.\nThis makes it very easy to automate through bash scripting and over the years I\nhave done just that. In this post, I will go through this script and show you\nhow to custom it to your own tastes.")]),t._v(" "),a("p",[t._v("Note that this is not a general purpose Arch Linux installer, but more a guide\nto creating your own installer specific to your needs. I do not recommend\ndirectly using my installer - it is likely to change without notice. Instead,\nfork it and make it your own.")]),t._v(" "),a("p",[t._v("This guide is also not a tutorial on installing ArchLinux, it assumes some\nbasic knowledge of the install process and shows you how to script it.\nBeginners should first go through the "),a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Installation_guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("official install guide"),a("OutboundLink")],1),t._v(" and be able to\ncreate a working Arch Linux system before following this guide.")]),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("There are a few variables that generally change on every install, the hostname\nand disk at the very least. There are also settings that you might not want to\nbake into a script such as your username and password. So we require a way to\ncustomise the script on each install. The simplest way is to add some variables\nto the top of the script for everything you want, blanking out any secrets you\ndon't want to share.")]),t._v(" "),t._m(3),a("p",[t._v("But then the user is forced to download and edit the script before they can run\nit.")]),t._v(" "),a("p",[t._v("You can get these values from the command line arguments.")]),t._v(" "),t._m(4),a("p",[t._v("Or better yet, throw an error and halt the install process on missing input.")]),t._v(" "),t._m(5),a("p",[a("em",[t._v("There are many other useful things you can do with "),a("a",{attrs:{href:"http://wiki.bash-hackers.org/syntax/pe",target:"_blank",rel:"noopener noreferrer"}},[t._v("bash's parameter\nsubstitution"),a("OutboundLink")],1),t._v(", which are worth looking up if you want to write bash scripts to\nautomate things.")])]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),a("p",[t._v("But the Arch live disk comes with the dialog utility, this opens up another\noption for collecting user input.")]),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),a("p",[t._v("In addition to looking fancy, this also helps to reduce typos and requires less\ntyping. The list is sorted by reverse size so the disk you want is likely at\nthe top of the list.")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),a("p",[t._v("This works fine inside a script, you are able to interact with it like you are\nuser as well, and when you exit it our script will continue.")]),t._v(" "),a("p",[t._v("The major problem with this interactive approach is figuring out the formatting\nand layout the user wants or expected for that install. You are mostly forced to\nask the user what they want to do with each partition they created, which\ncomplicates the script and install process quite a bit. Or just assume a layout\nand hope the user formatted it correctly.")]),t._v(" "),a("p",[t._v("Alternatively, if most or all of your systems are formatted identically, you can\nhardcode the layout into the script. This keeps the script simpler with fewer\nsteps to go through. In the event that you do need a custom disk layout for some\nspecial case, you can download and manually edit the script or even delete the\nformatting section entirely and formatting it manually beforehand.")]),t._v(" "),t._m(18),a("p",[t._v("You can make this more flexible by allowing the user to specify the size of the\nESP or swap space, or even calculate the swap based on the available ram.")]),t._v(" "),t._m(19),a("p",[t._v("Note that I work in MiB to allow parted some freedom to align the partitions\ncorrectly and as such add an extra meg to the size to account for rounding\nerrors.")]),t._v(" "),a("p",[t._v("Before we can format the partitions, we need a reference to their device file.\nFor most systems this is trivial, just add the partition number to the device\nfile.")]),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),a("p",[t._v("Once you have identified the partitions, format and mount them to your desired\nlocations.")]),t._v(" "),t._m(25),t._m(26),t._v(" "),t._m(27),t._v(" "),a("p",[t._v("We are ready to pacstrap the system with any and all packages you want on your\nfinal system. I use the meta-packages I created in "),a("router-link",{attrs:{to:"/linux/archlinux-meta-packages/"}},[t._v("part 2")]),t._v(", which will, in\nturn, install all the packages I want on my base system. For this, I need to\nappend my repo to the end of "),a("code",[t._v("/etc/pacman.conf")]),t._v(" before running "),a("code",[t._v("pacstrap")]),t._v(".")],1),t._v(" "),t._m(28),t._m(29),t._v(" "),t._m(30),t._m(31),t._v(" "),a("p",[t._v("The last thing we need to do is configure the system. This stage is quite short\nfor my systems as most of the work is done by the meta-packages that I created\nin "),a("router-link",{attrs:{to:"/linux/archlinux-meta-packages/"}},[t._v("part 2")]),t._v(". If you choose not to use meta-packages then expand this as much as\nyou require. You can automate the configuration of your entire set up if you\nwant to or bootstrap configuration managers like "),a("a",{attrs:{href:"https://saltstack.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SaltStack"),a("OutboundLink")],1),t._v(" or "),a("a",{attrs:{href:"https://www.ansible.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible"),a("OutboundLink")],1),t._v(" if\nyou want to get really fancy.")],1),t._v(" "),t._m(32),t._v(" "),t._m(33),a("p",[t._v("Set your hostname")]),t._v(" "),t._m(34),a("p",[t._v("Create a user and set roots password")]),t._v(" "),t._m(35),t._m(36),t._v(" "),a("p",[t._v("There are a couple of other bits in the script that have nothing to do with\ninstalling Arch Linux but improve the error handling and make it easier to\ndebug problems.")]),t._v(" "),a("p",[t._v("First, there is my standard preamble, hardening the [script against\nfailure][bash strict mode], which if you have been following my posts you\nshould start to recognise.")]),t._v(" "),t._m(37),t._m(38),t._v(" "),t._m(39),a("p",[t._v("I also ensure ntp is enabled as I have systems that like to drift when\nunpowered for a long time.")]),t._v(" "),t._m(40),t._m(41),t._v(" "),a("p",[t._v("Here is my version, at the time of writing, of the installer script in its\nentirety. You can find my "),a("a",{attrs:{href:"https://github.com/mdaffin/arch-pkgs/blob/master/installer/install-arch",target:"_blank",rel:"noopener noreferrer"}},[t._v("live/latest incarnation"),a("OutboundLink")],1),t._v(" in my "),a("a",{attrs:{href:"https://github.com/mdaffin/arch-pkgs",target:"_blank",rel:"noopener noreferrer"}},[t._v("arch-pkgs"),a("OutboundLink")],1),t._v(" git\nrepository alongside all of the other resources I discuss in this series. I\nhighly recommend that you start with this as a base, fork it or place it in\nyour own repo and customise it to your liking. My version is likely to change\nin the future as I evolve how I run my systems.")]),t._v(" "),t._m(42),t._m(43),t._v(" "),t._m(44),t._v(" "),a("p",[t._v("Here is the curl line I use in my script.")]),t._v(" "),t._m(45),a("p",[t._v("You can also download the script, modify it if required and run it locally.\nThis can be useful when setting up a system that diverges slightly from your\nstandard setup or if you want to customise it further.")]),t._v(" "),t._m(46),t._v(" "),a("p",[t._v("Now you have fully automated the Arch Linux install process, and when combined\nwith my "),a("router-link",{attrs:{to:"/linux/archlinux-repo-in-aws-bucket/"}},[t._v("previous")]),t._v(" "),a("router-link",{attrs:{to:"/linux/archlinux-meta-packages/"}},[t._v("posts")]),t._v(" in this series, the whole\nconfiguration side of things as well. I have been using this script in some\nform or another for several years now and the best part of it is how easy it is\nto hack and change either before you download the script or just before you run\nit.")],1),t._v(" "),a("p",[t._v("You can even take this a step further and bake the installer into a "),a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/archiso",target:"_blank",rel:"noopener noreferrer"}},[t._v("custom\narch iso"),a("OutboundLink")],1),t._v(". But I did not find this worth the effort unless you want to\nautomate the installation of Arch Linux on multiple identical systems, such as\nrunning Arch with a kiosk browser on a bunch of monitors.")]),t._v(" "),a("p",[a("em",[a("a",{attrs:{href:"https://www.reddit.com/r/archlinux/comments/7v7g4w/managing_multiple_arch_linux_systems_with/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Discuss on Reddit"),a("OutboundLink")],1)])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"automating-arch-linux-part-3-creating-a-custom-arch-linux-installer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#automating-arch-linux-part-3-creating-a-custom-arch-linux-installer","aria-hidden":"true"}},[this._v("#")]),this._v(" Automating Arch Linux Part 3: Creating a Custom Arch Linux Installer")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("Part 3:")]),this._v(" "),s("em",[this._v("Creating a Custom Arch Linux Installer")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"setting-variables-and-collecting-user-input"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setting-variables-and-collecting-user-input","aria-hidden":"true"}},[this._v("#")]),this._v(" Setting Variables and Collecting User Input")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("hostname"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),s("span",{attrs:{class:"token string"}},[this._v('"myhost"')]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("hostname"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),s("span",{attrs:{class:"token string"}},[this._v('"'),s("span",{attrs:{class:"token variable"}},[this._v("${1}")]),this._v('"')]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("hostname"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),s("span",{attrs:{class:"token string"}},[this._v('"${1:?"')]),this._v("Missing "),s("span",{attrs:{class:"token function"}},[this._v("hostname")]),s("span",{attrs:{class:"token string"}},[this._v('"}"')]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("But I always forget the order of these arguments, so I prefer to be prompted\nfor input. You can do this with the "),s("code",[this._v("read")]),this._v(" builtin.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" -n "),a("span",{attrs:{class:"token string"}},[t._v('"Hostname: "')]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("read")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("hostname")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"${hostname:?"')]),t._v("Missing "),a("span",{attrs:{class:"token function"}},[t._v("hostname")]),a("span",{attrs:{class:"token string"}},[t._v('"}"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Note that "),s("code",[this._v(":")]),this._v(" is a no-op, we are using it to test the validity of the\n"),s("code",[this._v("hostname")]),this._v(" variable and to exit early if it is blank (ie the user hit enter\nwithout typing anything).")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("For passwords, you should turn off echoing with "),s("code",[this._v("-s")]),this._v(", echo a blank line (as the\nnew line char is also not printed) and confirm the password with a second\nprompt to avoid typos locking the user out accidentally.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" -n "),a("span",{attrs:{class:"token string"}},[t._v('"Password: "')]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("read")]),t._v(" -s password\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" -n "),a("span",{attrs:{class:"token string"}},[t._v('"Repeat Password: "')]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("read")]),t._v(" -s password2\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$password")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$password2")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Passwords did not match"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("hostname"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("dialog --stdout --inputbox "),a("span",{attrs:{class:"token string"}},[t._v('"Enter hostname"')]),t._v(" 0 0"),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n"),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("hostname:?"),a("span",{attrs:{class:"token string"}},[t._v('"hostname cannot be empty"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Or use "),s("code",[this._v("--passwordbox")]),this._v(" instead of "),s("code",[this._v("--inputbox")]),this._v(" for passwords. Dialog also lets\nus do more complicated things like displaying a list of disks for the user to\npick from.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("devicelist"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsblk -dplnx size -o name,size "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" -Ev "),a("span",{attrs:{class:"token string"}},[t._v('"boot|rpmb|loop"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" tac"),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v("\ndevice"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("dialog --stdout --menu "),a("span",{attrs:{class:"token string"}},[t._v('"Select installation disk"')]),t._v(" 0 0 0 $"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("devicelist"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"/linux/archlinux-installer/01-dialog-disk.png",alt:"dialog disk selection"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"partioning-and-formatting-the-disk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#partioning-and-formatting-the-disk","aria-hidden":"true"}},[this._v("#")]),this._v(" Partioning and Formatting the Disk")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("Most people are familiar with "),a("code",[t._v("fdisk")]),t._v(" or "),a("code",[t._v("gdisk")]),t._v(" for partitions their disk. But\nyou might want to consider their lesser used sisters, "),a("code",[t._v("cfdisk")]),t._v(" and "),a("code",[t._v("cgdisk")]),t._v(" if\nyou prefer a more interactive approach. Whichever you prefer you can launch it\nwith a disk to let the user format it however they want.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("gdisk "),s("span",{attrs:{class:"token string"}},[this._v('"'),s("span",{attrs:{class:"token variable"}},[this._v("${device}")]),this._v('"')]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("parted --script "),s("span",{attrs:{class:"token string"}},[this._v('"'),s("span",{attrs:{class:"token variable"}},[this._v("${device}")]),this._v('"')]),this._v(" -- mklabel gpt \\\n  mkpart ESP fat32 1Mib 129MiB \\\n  "),s("span",{attrs:{class:"token keyword"}},[this._v("set")]),this._v(" 1 boot on \\\n  mkpart primary linux-swap 129MiB 2177MiB \\\n  mkpart primary ext4 2177MiB 100%\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("swap_size"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),a("span",{attrs:{class:"token function"}},[t._v("free")]),t._v(" --mebi "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/Mem:/ {print "),a("span",{attrs:{class:"token variable"}},[t._v("$2")]),t._v("}'")]),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v("\nswap_end"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$((")]),t._v(" $swap_size "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("129")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("))")])]),t._v("MiB\n\nparted --script "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${device}")]),t._v('"')]),t._v(" -- mklabel gpt \\\n  mkpart ESP fat32 1Mib 129MiB \\\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" 1 boot on \\\n  mkpart primary linux-swap 129MiB "),a("span",{attrs:{class:"token variable"}},[t._v("${swap_end}")]),t._v(" \\\n  mkpart primary ext4 "),a("span",{attrs:{class:"token variable"}},[t._v("${swap_end}")]),t._v(" 100%\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("part_boot"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),s("span",{attrs:{class:"token string"}},[this._v('"'),s("span",{attrs:{class:"token variable"}},[this._v("${device}")]),this._v('1"')]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("But I found a couple of systems that this does not work. Instead, you may need\nto add "),s("code",[this._v("p1")]),this._v(" to the device file instead. You should be familiar with this if\nyour system is one of them, but generally, this is laptops with "),s("code",[this._v("/dev/mmcblk0")]),this._v("\nor "),s("code",[this._v("/dev/nvme0n1")]),this._v(" disks.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("part_boot"),s("span",{attrs:{class:"token operator"}},[this._v("=")]),s("span",{attrs:{class:"token string"}},[this._v('"'),s("span",{attrs:{class:"token variable"}},[this._v("${device}")]),this._v('p1"')]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("To generalise over these two types of disks you can use "),s("code",[this._v("ls")]),this._v(" and "),s("code",[this._v("grep")]),this._v(" to find\nand filter the actual partition. I found the bashes globbing was not powerful\nenough to filter out just a single partition while ignoring device files such\nas "),s("code",[this._v("/dev/mmcblk0boot1")]),this._v(" that also exist on some systems.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("part_boot"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),a("span",{attrs:{class:"token function"}},[t._v("ls")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("device"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("* "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" -E "),a("span",{attrs:{class:"token string"}},[t._v('"^'),a("span",{attrs:{class:"token variable"}},[t._v("${device}")]),t._v('p?1$"')]),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("mkfs.vfat -F32 "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_boot}")]),t._v('"')]),t._v("\nmkswap "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_swap}")]),t._v('"')]),t._v("\nmkfs.f2fs -f "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_root}")]),t._v('"')]),t._v("\n\nswapon "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_swap}")]),t._v('"')]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("mount")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_root}")]),t._v('"')]),t._v(" /mnt\n"),a("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /mnt/boot\n"),a("span",{attrs:{class:"token function"}},[t._v("mount")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_boot}")]),t._v('"')]),t._v(" /mnt/boot\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Note that if you want swap you should enable the swap partition so that\n"),s("code",[this._v("genfstab")]),this._v(" picks it up correctly.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"install-the-system-and-bootloader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-the-system-and-bootloader","aria-hidden":"true"}},[this._v("#")]),this._v(" Install the System and Bootloader")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v("/etc/pacman.conf "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),a("span",{attrs:{class:"token string"}},[t._v("EOF\n[mdaffin]\nSigLevel = Optional TrustAll\nServer = "),a("span",{attrs:{class:"token variable"}},[t._v("$REPO_URL")]),t._v("\nEOF")]),t._v("\n\npacstrap /mnt mdaffin-desktop\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Now to make our system actually bootable we must install a bootloader. I use\nUEFI on my systems and as such use "),s("code",[this._v("bootctl")]),this._v(". For commands that you want to run\ninside the context of your installed system wrap them with "),s("code",[this._v("arch-chroot /mnt")]),this._v(".")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("arch-chroot /mnt bootctl "),a("span",{attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v("EOF "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" /mnt/boot/loader/loader.conf\ndefault arch\nEOF\n\n"),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v("EOF "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" /mnt/boot/loader/entries/arch.conf\ntitle    Arch Linux\nlinux    /vmlinuz-linux\ninitrd   /initramfs-linux.img\noptions  root"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("PARTUUID"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("blkid -s PARTUUID -o value "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$part_root")]),t._v('"')]),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v(" rw\nEOF\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"configuring-the-system"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuring-the-system","aria-hidden":"true"}},[this._v("#")]),this._v(" Configuring the System")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("At a minimum run "),s("code",[this._v("genfstab")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("genfstab -t PARTUUID /mnt "),s("span",{attrs:{class:"token operator"}},[this._v(">>")]),this._v(" /mnt/etc/fstab\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${hostname}")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" /mnt/etc/hostname\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("arch-chroot /mnt "),a("span",{attrs:{class:"token function"}},[t._v("useradd")]),t._v(" -mU -s /usr/bin/zsh -G wheel,uucp,video,audio,storage,games,input "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$user")]),t._v('"')]),t._v("\narch-chroot /mnt chsh -s /usr/bin/zsh\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$user")]),t._v(":"),a("span",{attrs:{class:"token variable"}},[t._v("$password")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" chpasswd --root /mnt\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"root:'),a("span",{attrs:{class:"token variable"}},[t._v("$password")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" chpasswd --root /mnt\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"other-useful-bits"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#other-useful-bits","aria-hidden":"true"}},[this._v("#")]),this._v(" Other Useful Bits")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" -uo pipefail\n"),a("span",{attrs:{class:"token function"}},[t._v("trap")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'s="),a("span",{attrs:{class:"token variable"}},[t._v("$?")]),t._v('; echo "'),a("span",{attrs:{class:"token variable"}},[t._v("$0")]),t._v(': Error on line "'),a("span",{attrs:{class:"token variable"}},[t._v("$LINENO")]),t._v('": '),a("span",{attrs:{class:"token variable"}},[t._v("$BASH_COMMAND")]),t._v('"; exit '),a("span",{attrs:{class:"token variable"}},[t._v("$s")]),t._v("'")]),t._v(" ERR\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("And since the terminal on a live USB does not offer the ability scrolling by\ndefault it is easy to lose the output and errors from programs as they scroll\noff the screen. Most of the time this is not an issue, but when something goes\nwrong you wish you had it. To get around this I redirect stdout and stderr of\nthe script to the "),s("code",[this._v("tee")]),this._v(" command. This splits the stream, continuing to output\nit to the screen but also writes it to a log file in case there is a need to\ninspect it later. Honestly, I have only ever used this output once, but it is\nnot expensive or complicated to do so I just leave it in.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("exec")]),t._v(" 1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tee "),a("span",{attrs:{class:"token string"}},[t._v('"stdout.log"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("exec")]),t._v(" 2"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tee "),a("span",{attrs:{class:"token string"}},[t._v('"stderr.log"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("timedatectl set-ntp "),s("span",{attrs:{class:"token boolean"}},[this._v("true")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"the-complete-installer-script"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-complete-installer-script","aria-hidden":"true"}},[this._v("#")]),this._v(" The Complete Installer Script")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# WARNING: this script will destroy data on the selected disk.")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# This script can be run by executing the following:")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("#   curl -sL https://git.io/vNxbN | bash")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" -uo pipefail\n"),a("span",{attrs:{class:"token function"}},[t._v("trap")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'s="),a("span",{attrs:{class:"token variable"}},[t._v("$?")]),t._v('; echo "'),a("span",{attrs:{class:"token variable"}},[t._v("$0")]),t._v(': Error on line "'),a("span",{attrs:{class:"token variable"}},[t._v("$LINENO")]),t._v('": '),a("span",{attrs:{class:"token variable"}},[t._v("$BASH_COMMAND")]),t._v('"; exit '),a("span",{attrs:{class:"token variable"}},[t._v("$s")]),t._v("'")]),t._v(" ERR\n\nREPO_URL"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"https://s3.eu-west-2.amazonaws.com/mdaffin-arch/repo/x86_64"')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("### Get infomation from user ###")]),t._v("\nhostname"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("dialog --stdout --inputbox "),a("span",{attrs:{class:"token string"}},[t._v('"Enter hostname"')]),t._v(" 0 0"),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n"),a("span",{attrs:{class:"token function"}},[t._v("clear")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("hostname:?"),a("span",{attrs:{class:"token string"}},[t._v('"hostname cannot be empty"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nuser"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("dialog --stdout --inputbox "),a("span",{attrs:{class:"token string"}},[t._v('"Enter admin username"')]),t._v(" 0 0"),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n"),a("span",{attrs:{class:"token function"}},[t._v("clear")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("user:?"),a("span",{attrs:{class:"token string"}},[t._v('"user cannot be empty"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\npassword"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("dialog --stdout --passwordbox "),a("span",{attrs:{class:"token string"}},[t._v('"Enter admin password"')]),t._v(" 0 0"),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n"),a("span",{attrs:{class:"token function"}},[t._v("clear")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("password:?"),a("span",{attrs:{class:"token string"}},[t._v('"password cannot be empty"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\npassword2"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("dialog --stdout --passwordbox "),a("span",{attrs:{class:"token string"}},[t._v('"Enter admin password again"')]),t._v(" 0 0"),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n"),a("span",{attrs:{class:"token function"}},[t._v("clear")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$password")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$password2")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Passwords did not match"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndevicelist"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsblk -dplnx size -o name,size "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" -Ev "),a("span",{attrs:{class:"token string"}},[t._v('"boot|rpmb|loop"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" tac"),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v("\ndevice"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("dialog --stdout --menu "),a("span",{attrs:{class:"token string"}},[t._v('"Select installation disk"')]),t._v(" 0 0 0 $"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("devicelist"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" 1\n"),a("span",{attrs:{class:"token function"}},[t._v("clear")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("### Set up logging ###")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("exec")]),t._v(" 1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tee "),a("span",{attrs:{class:"token string"}},[t._v('"stdout.log"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("exec")]),t._v(" 2"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tee "),a("span",{attrs:{class:"token string"}},[t._v('"stderr.log"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntimedatectl set-ntp "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("### Setup the disk and partitions ###")]),t._v("\nswap_size"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),a("span",{attrs:{class:"token function"}},[t._v("free")]),t._v(" --mebi "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/Mem:/ {print "),a("span",{attrs:{class:"token variable"}},[t._v("$2")]),t._v("}'")]),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v("\nswap_end"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$((")]),t._v(" $swap_size "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("129")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("))")])]),t._v("MiB\n\nparted --script "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${device}")]),t._v('"')]),t._v(" -- mklabel gpt \\\n  mkpart ESP fat32 1Mib 129MiB \\\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" 1 boot on \\\n  mkpart primary linux-swap 129MiB "),a("span",{attrs:{class:"token variable"}},[t._v("${swap_end}")]),t._v(" \\\n  mkpart primary ext4 "),a("span",{attrs:{class:"token variable"}},[t._v("${swap_end}")]),t._v(" 100%\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# Simple globbing was not enough as on one device I needed to match /dev/mmcblk0p1")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# but not /dev/mmcblk0boot1 while being able to match /dev/sda1 on other devices.")]),t._v("\npart_boot"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),a("span",{attrs:{class:"token function"}},[t._v("ls")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("device"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("* "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" -E "),a("span",{attrs:{class:"token string"}},[t._v('"^'),a("span",{attrs:{class:"token variable"}},[t._v("${device}")]),t._v('p?1$"')]),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\npart_swap"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),a("span",{attrs:{class:"token function"}},[t._v("ls")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("device"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("* "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" -E "),a("span",{attrs:{class:"token string"}},[t._v('"^'),a("span",{attrs:{class:"token variable"}},[t._v("${device}")]),t._v('p?2$"')]),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\npart_root"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),a("span",{attrs:{class:"token function"}},[t._v("ls")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("device"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("* "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" -E "),a("span",{attrs:{class:"token string"}},[t._v('"^'),a("span",{attrs:{class:"token variable"}},[t._v("${device}")]),t._v('p?3$"')]),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n\nwipefs "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_boot}")]),t._v('"')]),t._v("\nwipefs "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_swap}")]),t._v('"')]),t._v("\nwipefs "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_root}")]),t._v('"')]),t._v("\n\nmkfs.vfat -F32 "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_boot}")]),t._v('"')]),t._v("\nmkswap "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_swap}")]),t._v('"')]),t._v("\nmkfs.f2fs -f "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_root}")]),t._v('"')]),t._v("\n\nswapon "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_swap}")]),t._v('"')]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("mount")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_root}")]),t._v('"')]),t._v(" /mnt\n"),a("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /mnt/boot\n"),a("span",{attrs:{class:"token function"}},[t._v("mount")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${part_boot}")]),t._v('"')]),t._v(" /mnt/boot\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("### Install and configure the basic system ###")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v("/etc/pacman.conf "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),a("span",{attrs:{class:"token string"}},[t._v("EOF\n[mdaffin]\nSigLevel = Optional TrustAll\nServer = "),a("span",{attrs:{class:"token variable"}},[t._v("$REPO_URL")]),t._v("\nEOF")]),t._v("\n\npacstrap /mnt mdaffin-desktop\ngenfstab -t PARTUUID /mnt "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /mnt/etc/fstab\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("${hostname}")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" /mnt/etc/hostname\n\n"),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v("/mnt/etc/pacman.conf "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),a("span",{attrs:{class:"token string"}},[t._v("EOF\n[mdaffin]\nSigLevel = Optional TrustAll\nServer = "),a("span",{attrs:{class:"token variable"}},[t._v("$REPO_URL")]),t._v("\nEOF")]),t._v("\n\narch-chroot /mnt bootctl "),a("span",{attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v("EOF "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" /mnt/boot/loader/loader.conf\ndefault arch\nEOF\n\n"),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v("EOF "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" /mnt/boot/loader/entries/arch.conf\ntitle    Arch Linux\nlinux    /vmlinuz-linux\ninitrd   /initramfs-linux.img\noptions  root"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("PARTUUID"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("blkid -s PARTUUID -o value "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$part_root")]),t._v('"')]),a("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v(" rw\nEOF\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"LANG=en_GB.UTF-8"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" /mnt/etc/locale.conf\n\narch-chroot /mnt "),a("span",{attrs:{class:"token function"}},[t._v("useradd")]),t._v(" -mU -s /usr/bin/zsh -G wheel,uucp,video,audio,storage,games,input "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$user")]),t._v('"')]),t._v("\narch-chroot /mnt chsh -s /usr/bin/zsh\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$user")]),t._v(":"),a("span",{attrs:{class:"token variable"}},[t._v("$password")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" chpasswd --root /mnt\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"root:'),a("span",{attrs:{class:"token variable"}},[t._v("$password")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" chpasswd --root /mnt\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"hosting-and-running-the-installer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hosting-and-running-the-installer","aria-hidden":"true"}},[this._v("#")]),this._v(" Hosting and Running the Installer")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Running the script is as simple as downloading it from the Arch Linux live\nUSB/CD and running the script. To make this easier, since you often cannot copy\nin the live environment, you can use a URL shortener such as git.io or goo.gl\nto make the URLs easier to type. "),s("em",[this._v("Remember to use the raw link to the script if\nyou host it on github or similar sites.")]),this._v(" Once you have the URL I recommend\nadding it to the top of the script or a README in the repo for easy reference\nlater.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[this._v("curl")]),this._v(" -sL https://git.io/vNxbN "),s("span",{attrs:{class:"token operator"}},[this._v("|")]),this._v(" "),s("span",{attrs:{class:"token function"}},[this._v("bash")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"conclusion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conclusion","aria-hidden":"true"}},[this._v("#")]),this._v(" Conclusion")])}],!1,null,null,null);e.options.__file="index.md";s.default=e.exports}}]);